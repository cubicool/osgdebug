diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0ef2edd33..559bcf1a1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -313,6 +313,39 @@ INCLUDE_DIRECTORIES(SYSTEM ${OPENGL_INCLUDE_DIR})
 #ADD_DEFINITIONS(-D)
 # Platform specific definitions
 
+if(isMultiConfig)
+	if(NOT "Asan" IN_LIST CMAKE_CONFIGURATION_TYPES)
+		list(APPEND CMAKE_CONFIGURATION_TYPES Asan)
+	endif()
+
+else()
+	set(allowedBuildTypes Asan Debug Release RelWithDebInfo MinSizeRel)
+	set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "${allowedBuildTypes}")
+
+	# if(CMAKE_BUILD_TYPE AND NOT CMAKE_BUILD_TYPE IN_LIST allowedBuildTypes)
+	# 	message(FATAL_ERROR "Invalid build type: ${CMAKE_BUILD_TYPE}")
+	# endif()
+endif()
+
+set(CMAKE_C_FLAGS_ASAN
+	"${CMAKE_C_FLAGS_DEBUG} -fsanitize=address -fno-omit-frame-pointer" CACHE STRING
+	"Flags used by the C compiler for Asan build type or configuration." FORCE
+)
+
+set(CMAKE_CXX_FLAGS_ASAN
+	"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address -fno-omit-frame-pointer" CACHE STRING
+	"Flags used by the C++ compiler for Asan build type or configuration." FORCE
+)
+
+set(CMAKE_EXE_LINKER_FLAGS_ASAN
+	"${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=address" CACHE STRING
+	"Linker flags to be used to create executables for Asan build type." FORCE
+)
+
+set(CMAKE_SHARED_LINKER_FLAGS_ASAN
+	"${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=address" CACHE STRING
+	"Linker lags to be used to create shared libraries for Asan build type." FORCE
+)
 
 IF(WIN32 AND NOT ANDROID)
     OPTION(OSG_DETERMINE_WIN_VERSION "Wheter to automatically determine current Windows version" ON)
